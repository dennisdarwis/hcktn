{
  "_args": [
    [
      {
        "raw": "https-post",
        "scope": null,
        "escapedName": "https-post",
        "name": "https-post",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/dennisdarwis/hcktn"
    ]
  ],
  "_from": "https-post@latest",
  "_id": "https-post@0.1.1",
  "_inCache": true,
  "_location": "/https-post",
  "_nodeVersion": "6.9.4",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/https-post-0.1.1.tgz_1485491511710_0.5230839282739908"
  },
  "_npmUser": {
    "name": "simoncpu",
    "email": "simon@crowdmetric.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "https-post",
    "scope": null,
    "escapedName": "https-post",
    "name": "https-post",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/https-post/-/https-post-0.1.1.tgz",
  "_shasum": "d93bb52694d411473b4b08ad5e5baffbf5ff55bf",
  "_shrinkwrap": null,
  "_spec": "https-post",
  "_where": "/Users/dennisdarwis/hcktn",
  "author": {
    "name": "Simon Cornelius P. Umacob",
    "email": "simoncpu@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/simoncpu/https-post/issues"
  },
  "dependencies": {},
  "description": "Fork of the original http-post to support HTTPS. This is a shortcut method similar to https.get() for HTTPS POST requests with support for data and files",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "d93bb52694d411473b4b08ad5e5baffbf5ff55bf",
    "tarball": "https://registry.npmjs.org/https-post/-/https-post-0.1.1.tgz"
  },
  "gitHead": "0497e919f9d5835d9f983d622a7df92d7cd46e5a",
  "homepage": "https://github.com/simoncpu/https-post#readme",
  "keywords": [
    "http",
    "post",
    "upload",
    "file",
    "url"
  ],
  "license": "MIT",
  "main": "index",
  "maintainers": [
    {
      "name": "simoncpu",
      "email": "simon@crowdmetric.com"
    }
  ],
  "name": "https-post",
  "optionalDependencies": {},
  "readme": "# https-post\n\nThis utility is a fork of the original [http-post](https://github.com/samt/http-post) to support HTTPS.\nThis extends the functionality of the `https` library in stock node.js\nproviding a post request function in the same fashion of node's [https.get()](https://nodejs.org/api/https.html#https_https_get_options_callback).\n\nIn the same style as `https.get()`, this function calls `req.end()` automatically\n\n## Installing\n\n\tnpm install https-post\n\n## Usage and parameters\n\n\thttps-post(options, data[, files[, callback]])\n\nor\n\n\thttps-post(options, data[, callback])\n\n### options\n\nOptions are the same as the ones for [https.request()](https://nodejs.org/api/https.html#https_https_get_options_callback)\nexcept `method` will always be forced to `POST`. Note that `options` can be\nreplaced with the full URI of the request similar to `https.get` allowing for\neven greater flexibility in your post requests.\n\n### data\n\nData should be key/value pairs of form data. This does not handle file data,\nsee the `files` option below for more information on uploading files.\n\n\tvar data = {\n\t\tname: \"Sam\",\n\t\temail: \"sam@emberlabs.org\",\n\t\tgender: \"m\",\n\t\tlanguages: [\n\t\t\t\"C\",\n\t\t\t\"C++\",\n\t\t\t\"Java\",\n\t\t\t\"JavaScript\",\n\t\t\t\"PHP\",\n\t\t\t\"Python\"\n\t\t]\n\t}\n\nPass it an empty array if you do not need to send any form data.\n\n### files\n\nThis param is another JavaScript object that can contain many files to be posted\n\n\tvar files = [\n\t\t{\n\t\t\tparam: \"img\",\n\t\t\tpath: \"./assets/mycoolimage.png\"\n\t\t},\n\t\t{\n\t\t\tparam: \"somefile\",\n\t\t\tname: \"mydata.txt\",\n\t\t\tpath: \"C:\\\\Users\\\\Sam\\\\Documents\\\\asdf.txt\"\n\t\t}\n\t]\n\nYou may chose to specify an optional `name` in your array. It will override the\nfile name as it exists in the filesystem and name it the name you specified for\nthe request.\n\n### callback\n\nCallback is the same from [https.request()](https://nodejs.org/api/https.html#https_https_get_options_callback).\nIt accepts an instance of [https.ClientResponce](http://nodejs.org/api/http.html#http_http_clientresponse)\nthat has been created during the time of the request.\n\n## Return\n\nReturns an instance of [http.ClientRequest](http://nodejs.org/api/http.html#http_class_http_clientrequest)\n\n## Examples\n\nSetting up\n\n\tvar https = require('https');\n\thttps.post = require('https-post');\n\nPosting data\n\n\thttps.post('https://localhost/postscript.php', { name: 'Bruce Wayne', email: 'batman@example.org' }, function(res){\n\t\tres.setEncoding('utf8');\n\t\tres.on('data', function(chunk) {\n\t\t\tconsole.log(chunk);\n\t\t});\n\t});\n\nPosting a file\n\n\tvar files = [\n\t\t{\n\t\t\tparam: \"file\",\n\t\t\tpath: \"./assets/img/something.png\"\n\t\t}\n\t];\n\t\n\thttps.post('https://localhost/postscript.php', [], files, function(res){\n\t\t//...\n\t});\n\nPosting multiple files\n\n\tvar files = [\n\t\t{\n\t\t\tparam: \"file\",\n\t\t\tpath: \"./assets/img/something.png\"\n\t\t},\n\t\t{\n\t\t\tparam: \"junk\",\n\t\t\tpath: \"/home/sam/hello.txt\"\n\t\t}\n\t];\n\t\n\thttps.post('https://localhost/postscript.php', [], files, function(res){\n\t\t// ...\n\t});\n\nPosting data and files\n\n\tvar data = {\n\t\tname: 'Sam',\n\t\tdrink: 'coffee'\n\t};\n\t\n\tvar files = [\n\t\t{\n\t\t\tparam: \"file\",\n\t\t\tpath: \"./assets/img/something.png\"\n\t\t},\n\t\t{\n\t\t\tparam: \"junk\",\n\t\t\tpath: \"/home/sam/hello.txt\"\n\t\t}\n\t];\n\t\n\thttps.post('https://localhost/postscript.php', data, files, function(res){\n\t\t// ...\n\t});\n\n## License\n\n[The MIT License](http://opensource.org/licenses/mit-license.php)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/simoncpu/https-post.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.1.1"
}
